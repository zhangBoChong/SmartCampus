<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.accp.mapper.ClazzTeacherMapper">
  <resultMap id="BaseResultMap" type="com.accp.domain.ClazzTeacher">
    <id column="tcId" jdbcType="INTEGER" property="tcid" />
    <result column="ctid" jdbcType="INTEGER" property="ctid" />
    <result column="cid" jdbcType="INTEGER" property="cid" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="courseSchedule" jdbcType="INTEGER" property="courseschedule" />
    <result column="tid" jdbcType="INTEGER" property="tid" />
    <result column="status" jdbcType="INTEGER" property="status" />
  </resultMap>

  <select id="queryClazzTeacherByctid" resultMap="BaseResultMap">	
	SELECT * FROM `clazz_teacher` WHERE ctid=#{ctid}
  </select>
  <select id="queryBycid" resultMap="BaseResultMap">
  	SELECT * FROM `clazz_teacher` WHERE cid=#{cid} AND STATUS=1
  </select>
  <update id="updatetwo">
  	update `clazz_teacher` set status=1 WHERE cid=#{cid} AND STATUS=2 LIMIT  1
  </update>
  <update id="updatecourseschedule">
  	update clazz_teacher set courseSchedule=#{courseschedule},status=#{status} where tcId=#{tcid}
  </update>
  
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    tcId, ctid, cid, status, courseSchedule
  </sql>
  <select id="selectByExample" parameterType="com.accp.domain.ClazzTeacherExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from clazz_teacher
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from clazz_teacher
    where tcId = #{tcid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from clazz_teacher
    where tcId = #{tcid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.accp.domain.ClazzTeacherExample">
    delete from clazz_teacher
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.accp.domain.ClazzTeacher">
    insert into clazz_teacher (tcId, ctid, cid, 
      status, courseSchedule)
    values (#{tcid,jdbcType=INTEGER}, #{ctid,jdbcType=INTEGER}, #{cid,jdbcType=INTEGER}, 
      #{status,jdbcType=INTEGER}, #{courseschedule,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.accp.domain.ClazzTeacher">
    insert into clazz_teacher
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="tcid != null">
        tcId,
      </if>
      <if test="ctid != null">
        ctid,
      </if>
      <if test="cid != null">
        cid,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="courseschedule != null">
        courseSchedule,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="tcid != null">
        #{tcid,jdbcType=INTEGER},
      </if>
      <if test="ctid != null">
        #{ctid,jdbcType=INTEGER},
      </if>
      <if test="cid != null">
        #{cid,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="courseschedule != null">
        #{courseschedule,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.accp.domain.ClazzTeacherExample" resultType="java.lang.Long">
    select count(*) from clazz_teacher
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update clazz_teacher
    <set>
      <if test="record.tcid != null">
        tcId = #{record.tcid,jdbcType=INTEGER},
      </if>
      <if test="record.ctid != null">
        ctid = #{record.ctid,jdbcType=INTEGER},
      </if>
      <if test="record.cid != null">
        cid = #{record.cid,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.courseschedule != null">
        courseSchedule = #{record.courseschedule,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update clazz_teacher
    set tcId = #{record.tcid,jdbcType=INTEGER},
      ctid = #{record.ctid,jdbcType=INTEGER},
      cid = #{record.cid,jdbcType=INTEGER},
      status = #{record.status,jdbcType=INTEGER},
      courseSchedule = #{record.courseschedule,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.accp.domain.ClazzTeacher">
    update clazz_teacher
    <set>
      <if test="ctid != null">
        ctid = #{ctid,jdbcType=INTEGER},
      </if>
      <if test="cid != null">
        cid = #{cid,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="courseschedule != null">
        courseSchedule = #{courseschedule,jdbcType=INTEGER},
      </if>
    </set>
    where tcId = #{tcid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.accp.domain.ClazzTeacher">
    update clazz_teacher
    set ctid = #{ctid,jdbcType=INTEGER},
      cid = #{cid,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      courseSchedule = #{courseschedule,jdbcType=INTEGER}
    where tcId = #{tcid,jdbcType=INTEGER}
  </update>
  
  <insert id="clazzTeacherinsert">
  	INSERT INTO `clazz_teacher`(`ctid`,`cid`,`status`,`tid`)VALUE(#{ctid},#{cid},#{status},#{tid})
  </insert>
</mapper>