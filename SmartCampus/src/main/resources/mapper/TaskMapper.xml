<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.accp.mapper.TaskMapper">
  <resultMap id="BaseResultMap" type="com.accp.domain.Task">
    <id column="task_id" jdbcType="INTEGER" property="taskId" />
    <result column="bid" jdbcType="INTEGER" property="bid" />
    <result column="courseId" jdbcType="INTEGER" property="courseid" />
    <result column="sectionId" jdbcType="INTEGER" property="sectionid" />
    <result column="tid" jdbcType="INTEGER" property="tid" />
    <result column="task_zf" jdbcType="DOUBLE" property="taskZf" />
    <result column="task_lx_id" jdbcType="INTEGER" property="taskLxId" />
    <result column="task_kstime" jdbcType="TIMESTAMP" property="taskKstime" />
    <result column="task_jstime" jdbcType="TIMESTAMP" property="taskJstime" />
  </resultMap>
  
  <insert id="insertTask" parameterType="com.accp.domain.Task" useGeneratedKeys="true" keyProperty="task_id">
  		INSERT INTO `task`(`task_zf`,`task_lx_id`,`task_kstime`,`task_jstime`,`task_mc`)

		VALUE 		      (#{task_zf},#{task_lx_id},#{task_kstime},#{task_jstime},#{task_mc})
  </insert>
  
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    task_id, bid, courseId, sectionId, tid, task_zf, task_lx_id, task_kstime, task_jstime
  </sql>
  <select id="selectByExample" parameterType="com.accp.domain.TaskExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from task
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from task
    where task_id = #{taskId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from task
    where task_id = #{taskId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.accp.domain.TaskExample">
    delete from task
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.accp.domain.Task">
    insert into task (task_id, bid, courseId, 
      sectionId, tid, task_zf, 
      task_lx_id, task_kstime, task_jstime
      )
    values (#{taskId,jdbcType=INTEGER}, #{bid,jdbcType=INTEGER}, #{courseid,jdbcType=INTEGER}, 
      #{sectionid,jdbcType=INTEGER}, #{tid,jdbcType=INTEGER}, #{taskZf,jdbcType=DOUBLE}, 
      #{taskLxId,jdbcType=INTEGER}, #{taskKstime,jdbcType=TIMESTAMP}, #{taskJstime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.accp.domain.Task">
    insert into task
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="taskId != null">
        task_id,
      </if>
      <if test="bid != null">
        bid,
      </if>
      <if test="courseid != null">
        courseId,
      </if>
      <if test="sectionid != null">
        sectionId,
      </if>
      <if test="tid != null">
        tid,
      </if>
      <if test="taskZf != null">
        task_zf,
      </if>
      <if test="taskLxId != null">
        task_lx_id,
      </if>
      <if test="taskKstime != null">
        task_kstime,
      </if>
      <if test="taskJstime != null">
        task_jstime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="taskId != null">
        #{taskId,jdbcType=INTEGER},
      </if>
      <if test="bid != null">
        #{bid,jdbcType=INTEGER},
      </if>
      <if test="courseid != null">
        #{courseid,jdbcType=INTEGER},
      </if>
      <if test="sectionid != null">
        #{sectionid,jdbcType=INTEGER},
      </if>
      <if test="tid != null">
        #{tid,jdbcType=INTEGER},
      </if>
      <if test="taskZf != null">
        #{taskZf,jdbcType=DOUBLE},
      </if>
      <if test="taskLxId != null">
        #{taskLxId,jdbcType=INTEGER},
      </if>
      <if test="taskKstime != null">
        #{taskKstime,jdbcType=TIMESTAMP},
      </if>
      <if test="taskJstime != null">
        #{taskJstime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.accp.domain.TaskExample" resultType="java.lang.Long">
    select count(*) from task
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update task
    <set>
      <if test="record.taskId != null">
        task_id = #{record.taskId,jdbcType=INTEGER},
      </if>
      <if test="record.bid != null">
        bid = #{record.bid,jdbcType=INTEGER},
      </if>
      <if test="record.courseid != null">
        courseId = #{record.courseid,jdbcType=INTEGER},
      </if>
      <if test="record.sectionid != null">
        sectionId = #{record.sectionid,jdbcType=INTEGER},
      </if>
      <if test="record.tid != null">
        tid = #{record.tid,jdbcType=INTEGER},
      </if>
      <if test="record.taskZf != null">
        task_zf = #{record.taskZf,jdbcType=DOUBLE},
      </if>
      <if test="record.taskLxId != null">
        task_lx_id = #{record.taskLxId,jdbcType=INTEGER},
      </if>
      <if test="record.taskKstime != null">
        task_kstime = #{record.taskKstime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.taskJstime != null">
        task_jstime = #{record.taskJstime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update task
    set task_id = #{record.taskId,jdbcType=INTEGER},
      bid = #{record.bid,jdbcType=INTEGER},
      courseId = #{record.courseid,jdbcType=INTEGER},
      sectionId = #{record.sectionid,jdbcType=INTEGER},
      tid = #{record.tid,jdbcType=INTEGER},
      task_zf = #{record.taskZf,jdbcType=DOUBLE},
      task_lx_id = #{record.taskLxId,jdbcType=INTEGER},
      task_kstime = #{record.taskKstime,jdbcType=TIMESTAMP},
      task_jstime = #{record.taskJstime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.accp.domain.Task">
    update task
    <set>
      <if test="bid != null">
        bid = #{bid,jdbcType=INTEGER},
      </if>
      <if test="courseid != null">
        courseId = #{courseid,jdbcType=INTEGER},
      </if>
      <if test="sectionid != null">
        sectionId = #{sectionid,jdbcType=INTEGER},
      </if>
      <if test="tid != null">
        tid = #{tid,jdbcType=INTEGER},
      </if>
      <if test="taskZf != null">
        task_zf = #{taskZf,jdbcType=DOUBLE},
      </if>
      <if test="taskLxId != null">
        task_lx_id = #{taskLxId,jdbcType=INTEGER},
      </if>
      <if test="taskKstime != null">
        task_kstime = #{taskKstime,jdbcType=TIMESTAMP},
      </if>
      <if test="taskJstime != null">
        task_jstime = #{taskJstime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where task_id = #{taskId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.accp.domain.Task">
    update task
    set bid = #{bid,jdbcType=INTEGER},
      courseId = #{courseid,jdbcType=INTEGER},
      sectionId = #{sectionid,jdbcType=INTEGER},
      tid = #{tid,jdbcType=INTEGER},
      task_zf = #{taskZf,jdbcType=DOUBLE},
      task_lx_id = #{taskLxId,jdbcType=INTEGER},
      task_kstime = #{taskKstime,jdbcType=TIMESTAMP},
      task_jstime = #{taskJstime,jdbcType=TIMESTAMP}
    where task_id = #{taskId,jdbcType=INTEGER}
  </update>
</mapper>