<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.accp.mapper.ButtonmiddleMapper">
  <resultMap id="BaseResultMap" type="com.accp.domain.Buttonmiddle">
    <id column="brid" jdbcType="INTEGER" property="brid" />
    <result column="buttonid" jdbcType="INTEGER" property="buttonid" />
    <result column="roleId" jdbcType="INTEGER" property="roleId" />
    <result column="buttonstatus" jdbcType="INTEGER" property="buttonstatus" />
    <result column="delete_id" jdbcType="INTEGER" property="delete_id" />
    <result column="buttonmiddlereserveone" jdbcType="VARCHAR" property="buttonmiddlereserveone" />
    <result column="buttonmiddlereservetwo" jdbcType="VARCHAR" property="buttonmiddlereservetwo" />
  </resultMap>
  
  <!-- 修改角色的按钮权限(是否禁用) -->
  <update id="updatebuttonstatus">
  	UPDATE `buttonmiddle` SET `buttonstatus`=#{buttonstatus} WHERE `brid`=#{brid}
  </update>
  
  <!-- 按roleId和buttonid查询角色中间表的关联数据 -->
  <select id="selectcountbuttonmiddle" resultType="int">
  	SELECT COUNT(1) FROM `buttonmiddle` WHERE `buttonid`=#{buttonid} AND `roleId`=#{roleId}
  </select>
  
  <!-- 查询按钮是否禁用 -->
  <select id="querybuttonmiddle" resultType="com.accp.domain.Buttonmiddle">
  	SELECT * FROM `buttonmiddle` WHERE `roleId`=#{roleId} AND `buttonid`=#{buttonid} AND `delete_id`=#{delete_id}
  </select>
  
  <!-- 添加按钮与角色的关联 -->
  <insert id="insertbuttonmiddle">
  	INSERT INTO `buttonmiddle`(`buttonid`,`roleId`,`delete_id`) VALUE(#{buttonid},#{roleId},#{delete_id});
  </insert>
  
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    brid, buttonid, roleId, buttonstatus, delete_id, buttonmiddlereserveone, buttonmiddlereservetwo
  </sql>
  <select id="selectByExample" parameterType="com.accp.domain.ButtonmiddleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from buttonmiddle
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from buttonmiddle
    where brid = #{brid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from buttonmiddle
    where brid = #{brid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.accp.domain.ButtonmiddleExample">
    delete from buttonmiddle
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.accp.domain.Buttonmiddle">
    insert into buttonmiddle (brid, buttonid, roleId, 
      buttonstatus, delete_id, buttonmiddlereserveone, 
      buttonmiddlereservetwo)
    values (#{brid,jdbcType=INTEGER}, #{buttonid,jdbcType=INTEGER}, #{roleid,jdbcType=INTEGER}, 
      #{buttonstatus,jdbcType=INTEGER}, #{deleteId,jdbcType=INTEGER}, #{buttonmiddlereserveone,jdbcType=VARCHAR}, 
      #{buttonmiddlereservetwo,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.accp.domain.Buttonmiddle">
    insert into buttonmiddle
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="brid != null">
        brid,
      </if>
      <if test="buttonid != null">
        buttonid,
      </if>
      <if test="roleid != null">
        roleId,
      </if>
      <if test="buttonstatus != null">
        buttonstatus,
      </if>
      <if test="deleteId != null">
        delete_id,
      </if>
      <if test="buttonmiddlereserveone != null">
        buttonmiddlereserveone,
      </if>
      <if test="buttonmiddlereservetwo != null">
        buttonmiddlereservetwo,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="brid != null">
        #{brid,jdbcType=INTEGER},
      </if>
      <if test="buttonid != null">
        #{buttonid,jdbcType=INTEGER},
      </if>
      <if test="roleid != null">
        #{roleid,jdbcType=INTEGER},
      </if>
      <if test="buttonstatus != null">
        #{buttonstatus,jdbcType=INTEGER},
      </if>
      <if test="deleteId != null">
        #{deleteId,jdbcType=INTEGER},
      </if>
      <if test="buttonmiddlereserveone != null">
        #{buttonmiddlereserveone,jdbcType=VARCHAR},
      </if>
      <if test="buttonmiddlereservetwo != null">
        #{buttonmiddlereservetwo,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.accp.domain.ButtonmiddleExample" resultType="java.lang.Long">
    select count(*) from buttonmiddle
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update buttonmiddle
    <set>
      <if test="record.brid != null">
        brid = #{record.brid,jdbcType=INTEGER},
      </if>
      <if test="record.buttonid != null">
        buttonid = #{record.buttonid,jdbcType=INTEGER},
      </if>
      <if test="record.roleid != null">
        roleId = #{record.roleid,jdbcType=INTEGER},
      </if>
      <if test="record.buttonstatus != null">
        buttonstatus = #{record.buttonstatus,jdbcType=INTEGER},
      </if>
      <if test="record.deleteId != null">
        delete_id = #{record.deleteId,jdbcType=INTEGER},
      </if>
      <if test="record.buttonmiddlereserveone != null">
        buttonmiddlereserveone = #{record.buttonmiddlereserveone,jdbcType=VARCHAR},
      </if>
      <if test="record.buttonmiddlereservetwo != null">
        buttonmiddlereservetwo = #{record.buttonmiddlereservetwo,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update buttonmiddle
    set brid = #{record.brid,jdbcType=INTEGER},
      buttonid = #{record.buttonid,jdbcType=INTEGER},
      roleId = #{record.roleid,jdbcType=INTEGER},
      buttonstatus = #{record.buttonstatus,jdbcType=INTEGER},
      delete_id = #{record.deleteId,jdbcType=INTEGER},
      buttonmiddlereserveone = #{record.buttonmiddlereserveone,jdbcType=VARCHAR},
      buttonmiddlereservetwo = #{record.buttonmiddlereservetwo,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.accp.domain.Buttonmiddle">
    update buttonmiddle
    <set>
      <if test="buttonid != null">
        buttonid = #{buttonid,jdbcType=INTEGER},
      </if>
      <if test="roleid != null">
        roleId = #{roleid,jdbcType=INTEGER},
      </if>
      <if test="buttonstatus != null">
        buttonstatus = #{buttonstatus,jdbcType=INTEGER},
      </if>
      <if test="deleteId != null">
        delete_id = #{deleteId,jdbcType=INTEGER},
      </if>
      <if test="buttonmiddlereserveone != null">
        buttonmiddlereserveone = #{buttonmiddlereserveone,jdbcType=VARCHAR},
      </if>
      <if test="buttonmiddlereservetwo != null">
        buttonmiddlereservetwo = #{buttonmiddlereservetwo,jdbcType=VARCHAR},
      </if>
    </set>
    where brid = #{brid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.accp.domain.Buttonmiddle">
    update buttonmiddle
    set buttonid = #{buttonid,jdbcType=INTEGER},
      roleId = #{roleid,jdbcType=INTEGER},
      buttonstatus = #{buttonstatus,jdbcType=INTEGER},
      delete_id = #{deleteId,jdbcType=INTEGER},
      buttonmiddlereserveone = #{buttonmiddlereserveone,jdbcType=VARCHAR},
      buttonmiddlereservetwo = #{buttonmiddlereservetwo,jdbcType=VARCHAR}
    where brid = #{brid,jdbcType=INTEGER}
  </update>
</mapper>