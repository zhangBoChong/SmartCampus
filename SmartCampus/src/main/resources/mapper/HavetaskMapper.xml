<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.accp.mapper.HavetaskMapper">
  <resultMap id="BaseResultMap" type="com.accp.domain.Havetask">
    <id column="task_id" jdbcType="INTEGER" property="taskId" />
    <result column="topic_id" jdbcType="INTEGER" property="topicId" />
    <result column="csId" jdbcType="INTEGER" property="sid" />
    <result column="havetask_xuandaan" jdbcType="VARCHAR" property="havetaskXuandaan" />
    <result column="havetask_dafen" jdbcType="DOUBLE" property="havetaskDafen" />
    <result column="examination_id" jdbcType="INTEGER" property="examinationId" />
  </resultMap>
  <resultMap type="com.accp.domain.Havetask" id="examinfoscore" extends="BaseResultMap">
  	<result column="score" property="score" jdbcType="DOUBLE" />
  	<association property="examobj" column="examination_id" javaType="com.accp.domain.Examination" 
  			select="com.accp.mapper.ExaminationMapper.selectexamByexaminationId"></association>
  </resultMap>
  <resultMap type="com.accp.domain.Havetask" id="examinfoscoreTow" extends="BaseResultMap">
  	<result column="score" property="score" jdbcType="DOUBLE" />
  	<association property="examobj" column="examination_id" javaType="com.accp.domain.Examination" 
  			select="com.accp.mapper.ExaminationMapper.selectexamByexaminationIdTow"></association>
  </resultMap>
  <resultMap type="com.accp.domain.Havetask" id="mistaketimstudent" extends="BaseResultMap">
    <association property="stuobj" column="csId" javaType="com.accp.domain.Studentinfo" 
    		select="com.accp.mapper.StudentinfoMapper.studentexam"></association>
  </resultMap>
  <select id="examscoreBysid" resultMap="examinfoscore">
  	SELECT *,SUM(havetask_dafen) AS score FROM havetask 
	WHERE csId=#{sid}
	GROUP BY examination_id 
  </select>
  <select id="examscoreBysidTow" resultMap="examinfoscoreTow">
  	SELECT *,SUM(havetask_dafen) AS score FROM havetask 
	WHERE csId=#{sid}
	GROUP BY examination_id 
  </select>
  <select id="selectexamscore" resultType="double">
  	SELECT SUM(havetask_dafen) AS score FROM havetask  
 	WHERE csid=#{sid} AND examination_id=#{examinationId}
  </select>
  <select id="chmistakecountBytopicid" resultType="int">
  <!-- 当前题目的错误次数 -->
  	SELECT COUNT(*) FROM havetask  WHERE havetask_dafen=0 AND topic_id=#{topicId}
  </select>
  
  <select id="chmistakestudents" resultMap="mistaketimstudent">
  	SELECT * FROM havetask  WHERE havetask_dafen=0 AND topic_id=#{topicId}  GROUP BY csid
  </select>
  
  
  
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    task_id, topic_id, csId, havetask_xuandaan, havetask_dafen, examination_id
  </sql>
  <select id="selectByExample" parameterType="com.accp.domain.HavetaskExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from havetask
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from havetask
    where task_id = #{taskId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from havetask
    where task_id = #{taskId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.accp.domain.HavetaskExample">
    delete from havetask
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.accp.domain.Havetask">
    insert into havetask (task_id, topic_id, csId, 
      havetask_xuandaan, havetask_dafen, examination_id
      )
    values (#{taskId,jdbcType=INTEGER}, #{topicId,jdbcType=INTEGER}, #{sid,jdbcType=INTEGER}, 
      #{havetaskXuandaan,jdbcType=VARCHAR}, #{havetaskDafen,jdbcType=DOUBLE}, #{examinationId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.accp.domain.Havetask">
    insert into havetask
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="taskId != null">
        task_id,
      </if>
      <if test="topicId != null">
        topic_id,
      </if>
      <if test="sid != null">
        csId,
      </if>
      <if test="havetaskXuandaan != null">
        havetask_xuandaan,
      </if>
      <if test="havetaskDafen != null">
        havetask_dafen,
      </if>
      <if test="examinationId != null">
        examination_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="taskId != null">
        #{taskId,jdbcType=INTEGER},
      </if>
      <if test="topicId != null">
        #{topicId,jdbcType=INTEGER},
      </if>
      <if test="sid != null">
        #{sid,jdbcType=INTEGER},
      </if>
      <if test="havetaskXuandaan != null">
        #{havetaskXuandaan,jdbcType=VARCHAR},
      </if>
      <if test="havetaskDafen != null">
        #{havetaskDafen,jdbcType=DOUBLE},
      </if>
      <if test="examinationId != null">
        #{examinationId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.accp.domain.HavetaskExample" resultType="java.lang.Long">
    select count(*) from havetask
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update havetask
    <set>
      <if test="record.taskId != null">
        task_id = #{record.taskId,jdbcType=INTEGER},
      </if>
      <if test="record.topicId != null">
        topic_id = #{record.topicId,jdbcType=INTEGER},
      </if>
      <if test="record.sid != null">
        csId = #{record.sid,jdbcType=INTEGER},
      </if>
      <if test="record.havetaskXuandaan != null">
        havetask_xuandaan = #{record.havetaskXuandaan,jdbcType=VARCHAR},
      </if>
      <if test="record.havetaskDafen != null">
        havetask_dafen = #{record.havetaskDafen,jdbcType=DOUBLE},
      </if>
      <if test="record.examinationId != null">
        examination_id = #{record.examinationId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update havetask
    set task_id = #{record.taskId,jdbcType=INTEGER},
      topic_id = #{record.topicId,jdbcType=INTEGER},
      csId = #{record.sid,jdbcType=INTEGER},
      havetask_xuandaan = #{record.havetaskXuandaan,jdbcType=VARCHAR},
      havetask_dafen = #{record.havetaskDafen,jdbcType=DOUBLE},
      examination_id = #{record.examinationId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.accp.domain.Havetask">
    update havetask
    <set>
      <if test="topicId != null">
        topic_id = #{topicId,jdbcType=INTEGER},
      </if>
      <if test="sid != null">
        csId = #{sid,jdbcType=INTEGER},
      </if>
      <if test="havetaskXuandaan != null">
        havetask_xuandaan = #{havetaskXuandaan,jdbcType=VARCHAR},
      </if>
      <if test="havetaskDafen != null">
        havetask_dafen = #{havetaskDafen,jdbcType=DOUBLE},
      </if>
      <if test="examinationId != null">
        examination_id = #{examinationId,jdbcType=INTEGER},
      </if>
    </set>
    where task_id = #{taskId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.accp.domain.Havetask">
    update havetask
    set topic_id = #{topicId,jdbcType=INTEGER},
      csId = #{sid,jdbcType=INTEGER},
      havetask_xuandaan = #{havetaskXuandaan,jdbcType=VARCHAR},
      havetask_dafen = #{havetaskDafen,jdbcType=DOUBLE},
      examination_id = #{examinationId,jdbcType=INTEGER}
    where task_id = #{taskId,jdbcType=INTEGER}
  </update>
  
  

</mapper>