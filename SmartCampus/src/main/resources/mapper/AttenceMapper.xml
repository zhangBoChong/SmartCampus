<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.accp.mapper.AttenceMapper">
  <resultMap id="BaseResultMap" type="com.accp.domain.Attence">
    <id column="attenceId" jdbcType="INTEGER" property="attenceid" />
    <result column="studentid" jdbcType="INTEGER" property="studentid" />
    <result column="studentName" jdbcType="VARCHAR" property="studentname" />
    <result column="studentGreadId" jdbcType="INTEGER" property="studentgreadid" />
    <result column="studentClassId" jdbcType="INTEGER" property="studentclassid" />
    <result column="studentTeacher" jdbcType="INTEGER" property="studentteacher" />
    <result column="time" jdbcType="TIMESTAMP" property="time" />
    <result column="attence" jdbcType="INTEGER" property="attence" />
    <result column="K1" jdbcType="VARCHAR" property="k1" />
    <result column="K2" jdbcType="VARCHAR" property="k2" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    attenceId, studentid, studentName, studentGreadId, studentClassId, studentTeacher, 
    time, attence, K1, K2
  </sql>
  <select id="selectByExample" parameterType="com.accp.domain.AttenceExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from attence
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from attence
    where attenceId = #{attenceid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from attence
    where attenceId = #{attenceid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.accp.domain.AttenceExample">
    delete from attence
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.accp.domain.Attence">
    insert into attence (attenceId, studentid, studentName, 
      studentGreadId, studentClassId, studentTeacher, 
      time, attence, K1, 
      K2)
    values (#{attenceid,jdbcType=INTEGER}, #{studentid,jdbcType=INTEGER}, #{studentname,jdbcType=VARCHAR}, 
      #{studentgreadid,jdbcType=INTEGER}, #{studentclassid,jdbcType=INTEGER}, #{studentteacher,jdbcType=INTEGER}, 
      #{time,jdbcType=TIMESTAMP}, #{attence,jdbcType=INTEGER}, #{k1,jdbcType=VARCHAR}, 
      #{k2,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.accp.domain.Attence">
    insert into attence
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="attenceid != null">
        attenceId,
      </if>
      <if test="studentid != null">
        studentid,
      </if>
      <if test="studentname != null">
        studentName,
      </if>
      <if test="studentgreadid != null">
        studentGreadId,
      </if>
      <if test="studentclassid != null">
        studentClassId,
      </if>
      <if test="studentteacher != null">
        studentTeacher,
      </if>
      <if test="time != null">
        time,
      </if>
      <if test="attence != null">
        attence,
      </if>
      <if test="k1 != null">
        K1,
      </if>
      <if test="k2 != null">
        K2,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="attenceid != null">
        #{attenceid,jdbcType=INTEGER},
      </if>
      <if test="studentid != null">
        #{studentid,jdbcType=INTEGER},
      </if>
      <if test="studentname != null">
        #{studentname,jdbcType=VARCHAR},
      </if>
      <if test="studentgreadid != null">
        #{studentgreadid,jdbcType=INTEGER},
      </if>
      <if test="studentclassid != null">
        #{studentclassid,jdbcType=INTEGER},
      </if>
      <if test="studentteacher != null">
        #{studentteacher,jdbcType=INTEGER},
      </if>
      <if test="time != null">
        #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="attence != null">
        #{attence,jdbcType=INTEGER},
      </if>
      <if test="k1 != null">
        #{k1,jdbcType=VARCHAR},
      </if>
      <if test="k2 != null">
        #{k2,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.accp.domain.AttenceExample" resultType="java.lang.Long">
    select count(*) from attence
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update attence
    <set>
      <if test="record.attenceid != null">
        attenceId = #{record.attenceid,jdbcType=INTEGER},
      </if>
      <if test="record.studentid != null">
        studentid = #{record.studentid,jdbcType=INTEGER},
      </if>
      <if test="record.studentname != null">
        studentName = #{record.studentname,jdbcType=VARCHAR},
      </if>
      <if test="record.studentgreadid != null">
        studentGreadId = #{record.studentgreadid,jdbcType=INTEGER},
      </if>
      <if test="record.studentclassid != null">
        studentClassId = #{record.studentclassid,jdbcType=INTEGER},
      </if>
      <if test="record.studentteacher != null">
        studentTeacher = #{record.studentteacher,jdbcType=INTEGER},
      </if>
      <if test="record.time != null">
        time = #{record.time,jdbcType=TIMESTAMP},
      </if>
      <if test="record.attence != null">
        attence = #{record.attence,jdbcType=INTEGER},
      </if>
      <if test="record.k1 != null">
        K1 = #{record.k1,jdbcType=VARCHAR},
      </if>
      <if test="record.k2 != null">
        K2 = #{record.k2,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update attence
    set attenceId = #{record.attenceid,jdbcType=INTEGER},
      studentid = #{record.studentid,jdbcType=INTEGER},
      studentName = #{record.studentname,jdbcType=VARCHAR},
      studentGreadId = #{record.studentgreadid,jdbcType=INTEGER},
      studentClassId = #{record.studentclassid,jdbcType=INTEGER},
      studentTeacher = #{record.studentteacher,jdbcType=INTEGER},
      time = #{record.time,jdbcType=TIMESTAMP},
      attence = #{record.attence,jdbcType=INTEGER},
      K1 = #{record.k1,jdbcType=VARCHAR},
      K2 = #{record.k2,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.accp.domain.Attence">
    update attence
    <set>
      <if test="studentid != null">
        studentid = #{studentid,jdbcType=INTEGER},
      </if>
      <if test="studentname != null">
        studentName = #{studentname,jdbcType=VARCHAR},
      </if>
      <if test="studentgreadid != null">
        studentGreadId = #{studentgreadid,jdbcType=INTEGER},
      </if>
      <if test="studentclassid != null">
        studentClassId = #{studentclassid,jdbcType=INTEGER},
      </if>
      <if test="studentteacher != null">
        studentTeacher = #{studentteacher,jdbcType=INTEGER},
      </if>
      <if test="time != null">
        time = #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="attence != null">
        attence = #{attence,jdbcType=INTEGER},
      </if>
      <if test="k1 != null">
        K1 = #{k1,jdbcType=VARCHAR},
      </if>
      <if test="k2 != null">
        K2 = #{k2,jdbcType=VARCHAR},
      </if>
    </set>
    where attenceId = #{attenceid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.accp.domain.Attence">
    update attence
    set studentid = #{studentid,jdbcType=INTEGER},
      studentName = #{studentname,jdbcType=VARCHAR},
      studentGreadId = #{studentgreadid,jdbcType=INTEGER},
      studentClassId = #{studentclassid,jdbcType=INTEGER},
      studentTeacher = #{studentteacher,jdbcType=INTEGER},
      time = #{time,jdbcType=TIMESTAMP},
      attence = #{attence,jdbcType=INTEGER},
      K1 = #{k1,jdbcType=VARCHAR},
      K2 = #{k2,jdbcType=VARCHAR}
    where attenceId = #{attenceid,jdbcType=INTEGER}
  </update>
  <select id="selectattenceBysidlx" resultType="int">
  SELECT COUNT(*) FROM attence WHERE studentid=#{studentid} AND attence=#{attence}
  </select>
</mapper>