<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.accp.mapper.CtcMapper">
  <resultMap id="BaseResultMap" type="com.accp.domain.Ctc">
    <id column="ccid" jdbcType="INTEGER" property="ccid" />
    <result column="courseId" jdbcType="INTEGER" property="courseid" />
    <result column="cid" jdbcType="INTEGER" property="cid" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="tid" jdbcType="INTEGER" property="tid" />
    <result column="courseSchedule" jdbcType="INTEGER" property="courseschedule" />
  </resultMap>

  <select id="queryBycourseId" resultMap="BaseResultMap">
  	  SELECT ctc.`tid` FROM ctc WHERE ctc.`courseId`=#{courseId} AND ctc.`status`=1
  </select>
  
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ccid, courseId, cid, status, tid, courseSchedule
  </sql>
  <select id="selectByExample" parameterType="com.accp.domain.CtcExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ctc
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="queryBycid" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ctc
    where ccid = #{ccid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from ctc
    where ccid = #{ccid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.accp.domain.CtcExample">
    delete from ctc
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.accp.domain.Ctc">
    insert into ctc (ccid, courseId, cid, 
      status, tid, courseSchedule
      )
    values (#{ccid,jdbcType=INTEGER}, #{courseid,jdbcType=INTEGER}, #{cid,jdbcType=INTEGER}, 
      #{status,jdbcType=INTEGER}, #{tid,jdbcType=INTEGER}, #{courseschedule,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.accp.domain.Ctc">
    insert into ctc
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="ccid != null">
        ccid,
      </if>
      <if test="courseid != null">
        courseId,
      </if>
      <if test="cid != null">
        cid,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="tid != null">
        tid,
      </if>
      <if test="courseschedule != null">
        courseSchedule,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="ccid != null">
        #{ccid,jdbcType=INTEGER},
      </if>
      <if test="courseid != null">
        #{courseid,jdbcType=INTEGER},
      </if>
      <if test="cid != null">
        #{cid,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="tid != null">
        #{tid,jdbcType=INTEGER},
      </if>
      <if test="courseschedule != null">
        #{courseschedule,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.accp.domain.CtcExample" resultType="java.lang.Long">
    select count(*) from ctc
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update ctc
    <set>
      <if test="record.ccid != null">
        ccid = #{record.ccid,jdbcType=INTEGER},
      </if>
      <if test="record.courseid != null">
        courseId = #{record.courseid,jdbcType=INTEGER},
      </if>
      <if test="record.cid != null">
        cid = #{record.cid,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.tid != null">
        tid = #{record.tid,jdbcType=INTEGER},
      </if>
      <if test="record.courseschedule != null">
        courseSchedule = #{record.courseschedule,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ctc
    set ccid = #{record.ccid,jdbcType=INTEGER},
      courseId = #{record.courseid,jdbcType=INTEGER},
      cid = #{record.cid,jdbcType=INTEGER},
      status = #{record.status,jdbcType=INTEGER},
      tid = #{record.tid,jdbcType=INTEGER},
      courseSchedule = #{record.courseschedule,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.accp.domain.Ctc">
    update ctc
    <set>
      <if test="courseid != null">
        courseId = #{courseid,jdbcType=INTEGER},
      </if>
      <if test="cid != null">
        cid = #{cid,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="tid != null">
        tid = #{tid,jdbcType=INTEGER},
      </if>
      <if test="courseschedule != null">
        courseSchedule = #{courseschedule,jdbcType=INTEGER},
      </if>
    </set>
    where ccid = #{ccid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.accp.domain.Ctc">
    update ctc
    set courseId = #{courseid,jdbcType=INTEGER},
      cid = #{cid,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      tid = #{tid,jdbcType=INTEGER},
      courseSchedule = #{courseschedule,jdbcType=INTEGER}
    where ccid = #{ccid,jdbcType=INTEGER}
  </update>
</mapper>