<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.accp.mapper.ModuleMiddleMapper">
  <resultMap id="BaseResultMap" type="com.accp.domain.ModuleMiddle">
    <id column="mrId" jdbcType="INTEGER" property="mrid" />
    <result column="moduleId" jdbcType="INTEGER" property="moduleId" />
    <result column="roleId" jdbcType="INTEGER" property="roleId" />
    <result column="moduleZt" jdbcType="INTEGER" property="moduleZt" />
    <result column="delete_id" jdbcType="INTEGER" property="delete_id" />
    <collection property="list1" column="moduleId" ofType="com.accp.domain.Module" select="com.accp.dao.ModuleMapper.queryBymoduleId"></collection>
  </resultMap>
  
  <select id="queryByRoleId" resultType="com.accp.domain.ModuleMiddle">
  	SELECT * FROM `module_middle` WHERE `delete_id`=#{delete_id} AND `roleId`=#{roleId}
  </select>

  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    mrId, moduleId, roleId, moduleZt, delete_id
  </sql>
  <select id="selectByExample" parameterType="com.accp.domain.ModuleMiddleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from module_middle
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from module_middle
    where mrId = #{mrid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from module_middle
    where mrId = #{mrid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.accp.domain.ModuleMiddleExample">
    delete from module_middle
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.accp.domain.ModuleMiddle">
    insert into module_middle (mrId, moduleId, roleId, 
      moduleZt, delete_id)
    values (#{mrid,jdbcType=INTEGER}, #{moduleid,jdbcType=INTEGER}, #{roleid,jdbcType=INTEGER}, 
      #{modulezt,jdbcType=INTEGER}, #{deleteId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.accp.domain.ModuleMiddle">
    insert into module_middle
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="mrid != null">
        mrId,
      </if>
      <if test="moduleid != null">
        moduleId,
      </if>
      <if test="roleid != null">
        roleId,
      </if>
      <if test="modulezt != null">
        moduleZt,
      </if>
      <if test="deleteId != null">
        delete_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="mrid != null">
        #{mrid,jdbcType=INTEGER},
      </if>
      <if test="moduleid != null">
        #{moduleid,jdbcType=INTEGER},
      </if>
      <if test="roleid != null">
        #{roleid,jdbcType=INTEGER},
      </if>
      <if test="modulezt != null">
        #{modulezt,jdbcType=INTEGER},
      </if>
      <if test="deleteId != null">
        #{deleteId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.accp.domain.ModuleMiddleExample" resultType="java.lang.Long">
    select count(*) from module_middle
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update module_middle
    <set>
      <if test="record.mrid != null">
        mrId = #{record.mrid,jdbcType=INTEGER},
      </if>
      <if test="record.moduleid != null">
        moduleId = #{record.moduleid,jdbcType=INTEGER},
      </if>
      <if test="record.roleid != null">
        roleId = #{record.roleid,jdbcType=INTEGER},
      </if>
      <if test="record.modulezt != null">
        moduleZt = #{record.modulezt,jdbcType=INTEGER},
      </if>
      <if test="record.deleteId != null">
        delete_id = #{record.deleteId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update module_middle
    set mrId = #{record.mrid,jdbcType=INTEGER},
      moduleId = #{record.moduleid,jdbcType=INTEGER},
      roleId = #{record.roleid,jdbcType=INTEGER},
      moduleZt = #{record.modulezt,jdbcType=INTEGER},
      delete_id = #{record.deleteId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.accp.domain.ModuleMiddle">
    update module_middle
    <set>
      <if test="moduleid != null">
        moduleId = #{moduleid,jdbcType=INTEGER},
      </if>
      <if test="roleid != null">
        roleId = #{roleid,jdbcType=INTEGER},
      </if>
      <if test="modulezt != null">
        moduleZt = #{modulezt,jdbcType=INTEGER},
      </if>
      <if test="deleteId != null">
        delete_id = #{deleteId,jdbcType=INTEGER},
      </if>
    </set>
    where mrId = #{mrid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.accp.domain.ModuleMiddle">
    update module_middle
    set moduleId = #{moduleid,jdbcType=INTEGER},
      roleId = #{roleid,jdbcType=INTEGER},
      moduleZt = #{modulezt,jdbcType=INTEGER},
      delete_id = #{deleteId,jdbcType=INTEGER}
    where mrId = #{mrid,jdbcType=INTEGER}
  </update>
</mapper>